# This is a basic workflow to help you get started with Actions

name: Build and Deploy to cloudhub

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
      
      - uses: actions/cache@v1
        with:
          path: ~/.m2/repository
          key: $({ runner.os })-maven-${}{ hashFiles('**/pom.xml')}
          restore-keys:  |
            ${{ runner.os }}-maven-
       
      - name: Setup JDK 1.8
        uses: actions/setup-java@v3.6.0
        with:
          java-version: 1.8
      
      - name: add repo creds
        uses: s4u/maven-settings-action@v2.7.0
        with:
          servers:  |
            [{
              "id": "MuleRepository",
              "username": "${{ secrets.mule_nexus_username}}",
              "password": "${{ secrets.mule_nexus_password}}"
            },
            {
              "id": "anypoint-exchange-v2",
              "username": "${{ secrets.exchange_username}}",
              "password": "${{ secrets.exchange_password}}"
            }]
            
      - name: print effective settings
        run: mvn help:effective-settings
        
      - name: Build With maven
        run: mvn -B package --file pom.xml
        
      - name: Stamp artifact name with comiit hash
      - run:  |
          artifactName1: $( ls target/*.jar | head -1)
          commitHash: $(git rev-parse --short "SGITHUB_SHA")
          artifactName2: $( ls target/*.jar | head -1 | sed "s/.jar/-$commitHash.jar/g")
          mv $artifactName1 $artifactName2
          
      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v3.1.1
        with:
          # Artifact name
          name: artifacts
          # A file, directory or wildcard pattern that describes what to upload
          path: target/*.jar
      


