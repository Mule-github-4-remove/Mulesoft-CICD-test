name: Mule CICD Demo workflow

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:
    branches: [main]
    inputs:
      name:
        description: 'Confirm to deploy ?'
        default: 'yes'
        required: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions/cache@v1
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
        server-list:  |
          - server-id: MuleRepository
            server-username: ${{ secrets.MULE_NEXUS_USERNAME }}
            server-password: ${{ secrets.MULE_NEXUS_PASSWORD }}
          - server-id: anypoint-exchange-v2
            server-username: ${{ secrets.ANYPOINT_USERNAME }}
            server-password: ${{ secrets.ANYPOINT_PASSWORD }}
    - name: Build
      run: mvn -B package --file pom.xml
    - name: Stamp Artifact file name with commit hash
      run: |
        AFFN1=$(ls target/*.jar | head -1)
        commitHash=$(git rev-parse --short "$GITHUB_SHA")
        AFFN2=$(ls target/*.jar | head -1 | sed "s/.jar/.$commitHash.jar/g")
        mv $AFFN1 $AFFN2
    - uses: actions/upload-artifact@master
      with:
          name: artifacts
          path: target/*.jar
  DEV-Deploy:
    needs: build
    runs-on: ubuntu-latest
    environment: dev
    steps:    
    - uses: actions/checkout@v2
    - uses: actions/cache@v1
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-
    - uses: actions/download-artifact@master
      with:
        name: artifacts
        
    - name: add repo creds
      uses: s4u/maven-settings-action@v2.7.0
      with:
        servers:  |
          [{
            "id": "MuleRepository",
            "username": "${{ secrets.MULE_NEXUS_USERNAME}}",
            "password": "${{ secrets.MULE_NEXUS_PASSWORD}}"
          }]
          
    - name: Get Access Token
      id: myRequest
      uses: fjogeleit/http-request-action@v1
      with:
        url: 'https://anypoint.mulesoft.com/accounts/api/v2/oauth2/token'
        method: 'POST'
        customHeaders: '{"Content-Type": "application/json"}'
        data: '{"client_id":"${{ secrets.ANYPOINT_CLIENT_ID}}","client_secret": "${{ secrets.ANYPOINT_CLIENT_SECRET}}","grant_type": "client_credentials"}'


    - name: show access token
      run: |
          RESP=curl -X POST  -H "Content-Type:application/json" --data-raw '{"client_id":"a574560e7afa49128d5c5273214c87a6","client_secret":"d49547a5e0EA4b45bF15493846B5b3D2","grant_type":"client_credentials"}' https://anypoint.mulesoft.com/accounts/api/v2/oauth2/token
          echo '$RESP'
          echo '::add-mask::${{ fromJson(steps.myRequest.outputs.response).access_token }}'
    - name: test
      run: |
          echo "TOKEN_ANYPOINT=${{ fromJson(steps.myRequest.outputs.response).access_token }}" >> $GITHUB_ENV
          echo "::add-mask::$TOKEN_ANYPOINT"
          
    - name: Deploy to CloudHub
      run: |
        artifactName=$(ls *.jar | head -1)        
        mvn package deploy -DmuleDeploy -DauthToken=$TOKEN_ANYPOINT -Denvironment=Sandbox -Dworker=1 -DworkerType=Micro -Dapp.name=helloworld32test17 -Dapp.runtime=4.4.0

   
 
